// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package expenses.proxies.microflows;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public final class Microflows
{
	/**
	 * Private constructor to prevent instantiation of this class. 
	 */
	private Microflows() {}

	// These are the microflows for the Expenses module
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Registration_CreateTeamMemberBuilder(
		expenses.proxies.Registration _registration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Expenses.ACT_Registration_CreateTeamMember");
		builder = builder.withParam("Registration", _registration);
		return builder;
	}

	public static void aCT_Registration_CreateTeamMember(
		IContext context,
		expenses.proxies.Registration _registration
	)
	{
		aCT_Registration_CreateTeamMemberBuilder(
				_registration
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Request_OpenStep1Builder(
		expenses.proxies.Request _request
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Expenses.ACT_Request_OpenStep1");
		builder = builder.withParam("Request", _request);
		return builder;
	}

	public static void aCT_Request_OpenStep1(
		IContext context,
		expenses.proxies.Request _request
	)
	{
		aCT_Request_OpenStep1Builder(
				_request
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Request_OpenStep2Builder(
		expenses.proxies.Request _request
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Expenses.ACT_Request_OpenStep2");
		builder = builder.withParam("Request", _request);
		return builder;
	}

	public static void aCT_Request_OpenStep2(
		IContext context,
		expenses.proxies.Request _request
	)
	{
		aCT_Request_OpenStep2Builder(
				_request
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Request_OpenStep3Builder(
		expenses.proxies.Request _request
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Expenses.ACT_Request_OpenStep3");
		builder = builder.withParam("Request", _request);
		return builder;
	}

	public static void aCT_Request_OpenStep3(
		IContext context,
		expenses.proxies.Request _request
	)
	{
		aCT_Request_OpenStep3Builder(
				_request
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Request_SaveBuilder(
		expenses.proxies.Request _request
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Expenses.ACT_Request_Save");
		builder = builder.withParam("Request", _request);
		return builder;
	}

	public static void aCT_Request_Save(
		IContext context,
		expenses.proxies.Request _request
	)
	{
		aCT_Request_SaveBuilder(
				_request
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Request_StatusApprovedBuilder(
		expenses.proxies.Request _request
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Expenses.ACT_Request_StatusApproved");
		builder = builder.withParam("Request", _request);
		return builder;
	}

	public static void aCT_Request_StatusApproved(
		IContext context,
		expenses.proxies.Request _request
	)
	{
		aCT_Request_StatusApprovedBuilder(
				_request
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Request_StatusRejectedBuilder(
		expenses.proxies.Request _request
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Expenses.ACT_Request_StatusRejected");
		builder = builder.withParam("Request", _request);
		return builder;
	}

	public static void aCT_Request_StatusRejected(
		IContext context,
		expenses.proxies.Request _request
	)
	{
		aCT_Request_StatusRejectedBuilder(
				_request
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_RequestLine_CalculateTotalAmountBuilder(
		expenses.proxies.RequestLine _requestLine
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Expenses.ACT_RequestLine_CalculateTotalAmount");
		builder = builder.withParam("RequestLine", _requestLine);
		return builder;
	}

	public static void aCT_RequestLine_CalculateTotalAmount(
		IContext context,
		expenses.proxies.RequestLine _requestLine
	)
	{
		aCT_RequestLine_CalculateTotalAmountBuilder(
				_requestLine
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_RequestLine_DeleteBuilder(
		java.util.List<expenses.proxies.RequestLine> _requestLineList
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Expenses.ACT_RequestLine_Delete");
		builder = builder.withParam("RequestLineList", _requestLineList);
		return builder;
	}

	public static void aCT_RequestLine_Delete(
		IContext context,
		java.util.List<expenses.proxies.RequestLine> _requestLineList
	)
	{
		aCT_RequestLine_DeleteBuilder(
				_requestLineList
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_RequestLine_EditBuilder(
		java.util.List<expenses.proxies.RequestLine> _requestLineList
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Expenses.ACT_RequestLine_Edit");
		builder = builder.withParam("RequestLineList", _requestLineList);
		return builder;
	}

	public static void aCT_RequestLine_Edit(
		IContext context,
		java.util.List<expenses.proxies.RequestLine> _requestLineList
	)
	{
		aCT_RequestLine_EditBuilder(
				_requestLineList
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_TeamMember_CreateBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Expenses.ACT_TeamMember_Create");
		return builder;
	}

	public static void aCT_TeamMember_Create(IContext context)
	{
		aCT_TeamMember_CreateBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder bCO_TeamMember_CheckUserRoleSelectionBuilder(
		expenses.proxies.TeamMember _teamMember
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Expenses.BCO_TeamMember_CheckUserRoleSelection");
		builder = builder.withParam("TeamMember", _teamMember);
		return builder;
	}

	public static boolean bCO_TeamMember_CheckUserRoleSelection(
		IContext context,
		expenses.proxies.TeamMember _teamMember
	)
	{
		Object result = bCO_TeamMember_CheckUserRoleSelectionBuilder(
				_teamMember
			)
			.execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dC_Request_GetForUserRoleBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Expenses.DC_Request_GetForUserRole");
		return builder;
	}

	public static java.util.List<expenses.proxies.Request> dC_Request_GetForUserRole(IContext context)
	{
		Object result = dC_Request_GetForUserRoleBuilder().execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> expenses.proxies.Request.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_HeaderData_CalculateBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Expenses.DS_HeaderData_Calculate");
		return builder;
	}

	public static expenses.proxies.HeaderData dS_HeaderData_Calculate(IContext context)
	{
		Object result = dS_HeaderData_CalculateBuilder().execute(context);
		return result == null ? null : expenses.proxies.HeaderData.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder headerData_GetRequestsBuilder(
		system.proxies.UserRole _userRole
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Expenses.HeaderData_GetRequests");
		builder = builder.withParam("UserRole", _userRole);
		return builder;
	}

	public static java.util.List<expenses.proxies.Request> headerData_GetRequests(
		IContext context,
		system.proxies.UserRole _userRole
	)
	{
		Object result = headerData_GetRequestsBuilder(
				_userRole
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> expenses.proxies.Request.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder headerDate_GetOrCreateBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Expenses.HeaderDate_GetOrCreate");
		return builder;
	}

	public static expenses.proxies.HeaderData headerDate_GetOrCreate(IContext context)
	{
		Object result = headerDate_GetOrCreateBuilder().execute(context);
		return result == null ? null : expenses.proxies.HeaderData.initialize(context, (IMendixObject) result);
	}
}
